set -g default-terminal "screen-256color"

set -s escape-time 0

unbind C-b
set-option -g prefix C-x
bind-key C-x send-prefix

# reload tmux config
unbind C-r
bind C-r source-file ~/.tmux.conf \;\
    display 'Reloaded tmux config.'

bind-key -n C-Up copy-mode

# history limit
set -g history-limit 100000

bind -n C-k send-keys "clear && tmux clear-history" \; send-keys "Enter"

# enable vim keybindings in copy mode CTRL-a [
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -selection clipboard" 

unbind C-p
bind-key C-p run-shell "xclip -o -selection clipboard | tmux load-buffer - ; tmux paste-buffer"

# bind P paste-buffer
# write scrollback buffer to ~/tmux.history
# bind-key P command-prompt -p 'save history to filename' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

bind-key C-e run-shell "/home/ubuntu/scrollback2vim.sh"


# History

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
# Ctrl-p bindings for fzf
# this is the in-memory max num of commands limit
export HISTSIZE=1000000
# this is the history file max num of commands limit
export HISTFILESIZE=1000000
# remove duplicates from history + ignore all commands that starts with space.
# this is usefull in the case we wish to execute commands with sensetive
# information like passwords
export HISTCONTROL=ignoreboth


# # Save history from every terminal opened in the machine!!
# # commands inside PROMPT_COMMAND executes every time the prompt is displayed.
# # basiclly every command we run.
# # 'history -a' is appending any unwritten history to the history file (HISTFILE)
# # 'history -r' is reloading the history from the file (HISTFILE) to in-memory
# # I do not use this because it corrupt the history per terminal
# export PROMPT_COMMAND='history -a; history -r'
# IMPORTANT: Install fzf from github

# mashed history of all terminals in a single-separated file
# '~/.persistent_history'
# format the history time in the HISTFILE file
#  15  2023-11-03 09:08:29  <command> 1
#  16  2023-11-03 09:08:36  <command> 2
#  17  2023-11-03 09:08:44  <command>
export HISTTIMEFORMAT="%F %T  "

log_bash_persistent_history()
{
  [[
    $(history 1) =~ ^\ *[0-9]+\ +([^\ ]+\ [^\ ]+)\ +(.*)$
  ]]
  local date_part="${BASH_REMATCH[1]}"
  local command_part="${BASH_REMATCH[2]}"
  if [ "$command_part" != "$PERSISTENT_HISTORY_LAST" ]
  then
    echo "$command_part" >> ~/.persistent_history
    export PERSISTENT_HISTORY_LAST="$command_part"
  fi
}
# Stuff to do on PROMPT_COMMAND
run_on_prompt_command()
{
    log_bash_persistent_history
}
export PROMPT_COMMAND="run_on_prompt_command"

ph()
{
    READLINE_LINE=$(tac ~/.persistent_history ~/.common_commands | fzf)
    READLINE_POINT=${#READLINE_LINE}
}
bind -x '"\C-p":ph'




